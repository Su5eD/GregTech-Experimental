{
  "name": "Greg-OS Manual II",
  "icon": "minecraft:repeater",
  "category": "gtexperimental:guidebooks",
  "sortnum": 5,
  "pages": [
    "List of Logic Circuits",
    {
      "type": "patchouli:text",
      "title": "Basic Logic, Part I",
      "text": "This contains many simple Logic Gates. The first Six are basic Logic Gates. If you want to block any Inputs from it, then just screw a Redstone Cover on said Side. These Gates take Input from all uncovered Sides."
    },
    {
      "type": "patchouli:text",
      "title": "Basic Logic, Part II",
      "text": "Number Seven does 15 minus strongest Redstone. The following 6 Bit Gates are outputting what the binary Operators do. They take the strongest and the weakest Redstone Signal and compare them. Make sure to cover all unused Sides!"
    },
    {
      "type": "patchouli:text",
      "title": "Basic Logic, Part III",
      "text": "The 14th Gate inverts the strongest incoming Redstone Signal, using the Bitwise Inversion Operator '~'"
    },
    {
      "type": "patchouli:text",
      "title": "BitAND",
      "text": "This is a special hardcoded BitAND. It does what a normal BitAND does and checks if the Output is greater 0, to give a boolean Output. Very useful in combination with the Button Panel."
    },
    {
      "type": "patchouli:text",
      "title": "Combination Lock",
      "text": "You need to apply 1 - 4 Redstone Signals of a certain Strength in a row to let this Pulse once. You can attach a Button Panel to this to get a Lock for your Door."
    },
    {
      "type": "patchouli:text",
      "title": "Pulse Limiter",
      "text": "This is a Pulse Limiter, which outputs one Pulse regardless how long the Input Signal is. Also the output Pulse Length can be configured."
    },
    {
      "type": "patchouli:text",
      "title": "Randomizer",
      "text": "Outputs Random Redstone Signals. The Interval to determine a new Random Number can be configured."
    },
    {
      "type": "patchouli:text",
      "title": "Redstone Meter",
      "text": "This checks if a Signal is larger than the lower boundary and lower than the upper boundary. The Output can be Inverted."
    },
    {
      "type": "patchouli:text",
      "title": "Repeater",
      "text": "This does what a normal Repeater does. It just delays an incoming Redstone Signal."
    },
    {
      "type": "patchouli:text",
      "title": "Timer",
      "text": "This Gate is very useful. It pulses every X Ticks, and unlike it's extremely crappy Counterpart of Redpower it is CONSISTENT. It doesn't just lose its Timing, as soon as someone uses a Bed or Logs out. Also many more things can be configured."
    }
  ]
}